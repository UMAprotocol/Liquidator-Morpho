pub use unlocked_oval_oracle::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod unlocked_oval_oracle {
    #[allow(deprecated)]
    fn __abi() -> ::ethers::core::abi::Abi {
        ::ethers::core::abi::ethabi::Contract {
            constructor: ::core::option::Option::None,
            functions: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("unlockedOraclePrice"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function {
                            name: ::std::borrow::ToOwned::to_owned(
                                "unlockedOraclePrice",
                            ),
                            inputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("oracle"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("contract IOracle"),
                                    ),
                                },
                            ],
                            outputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::string::String::new(),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Uint(
                                        256usize,
                                    ),
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("uint256"),
                                    ),
                                },
                            ],
                            constant: ::core::option::Option::None,
                            state_mutability: ::ethers::core::abi::ethabi::StateMutability::View,
                        },
                    ],
                ),
            ]),
            events: ::std::collections::BTreeMap::new(),
            errors: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("MathOverflowedMulDiv"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::AbiError {
                            name: ::std::borrow::ToOwned::to_owned(
                                "MathOverflowedMulDiv",
                            ),
                            inputs: ::std::vec![],
                        },
                    ],
                ),
            ]),
            receive: false,
            fallback: false,
        }
    }
    ///The parsed JSON ABI of the contract.
    pub static UNLOCKEDOVALORACLE_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(__abi);
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = b"`\x80`@R4\x80\x15`\x0EW_\x80\xFD[Pa\x0Bi\x80a\0\x1C_9_\xF3\xFE`\x80`@R4\x80\x15a\0\x0FW_\x80\xFD[P`\x046\x10a\0)W_5`\xE0\x1C\x80c\xA4\x1D\xC1\xAC\x14a\0-W[_\x80\xFD[a\0@a\0;6`\x04a\x08\xC7V[a\0RV[`@Q\x90\x81R` \x01`@Q\x80\x91\x03\x90\xF3[_\x80\x82`\x01`\x01`\xA0\x1B\x03\x16c\xEA\xA2\xD7\xB4`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\0\x90W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\0\xB4\x91\x90a\x08\xE2V[\x90P_\x83`\x01`\x01`\xA0\x1B\x03\x16c\x05Oz\xC0`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\0\xF3W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x01\x17\x91\x90a\x08\xFDV[\x90P_\x84`\x01`\x01`\xA0\x1B\x03\x16c.o \xA6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x01VW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x01z\x91\x90a\x08\xE2V[\x90P_\x85`\x01`\x01`\xA0\x1B\x03\x16cF\x179\xD2`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x01\xB9W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x01\xDD\x91\x90a\x08\xFDV[\x90P_\x86`\x01`\x01`\xA0\x1B\x03\x16c\xF5\nG\x18`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x02\x1CW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x02@\x91\x90a\x08\xE2V[\x90P_\x87`\x01`\x01`\xA0\x1B\x03\x16c\xDCS\x85\x8C`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x02\x7FW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x02\xA3\x91\x90a\x08\xE2V[\x90P_\x88`\x01`\x01`\xA0\x1B\x03\x16cV\t^\x11`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x02\xE2W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x03\x06\x91\x90a\x08\xE2V[\x90P_\x89`\x01`\x01`\xA0\x1B\x03\x16c\xAC\xFB\xD3\x9E`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x03EW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x03i\x91\x90a\x08\xE2V[\x90P_\x8A`\x01`\x01`\xA0\x1B\x03\x16c\xCEK[\xBE`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x03\xA8W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x03\xCC\x91\x90a\x08\xFDV[\x90Pa\x04oa\x03\xE3\x85`\x01`\x01`\xA0\x1B\x03\x16a\x04~V[a\x03\xF5\x87`\x01`\x01`\xA0\x1B\x03\x16a\x04~V[a\x04\x08`\x01`\x01`\xA0\x1B\x03\x8D\x16\x8Ca\x05\xA8V[a\x04\x12\x91\x90a\t(V[a\x04\x1C\x91\x90a\t(V[a\x04.\x84`\x01`\x01`\xA0\x1B\x03\x16a\x04~V[a\x04@\x86`\x01`\x01`\xA0\x1B\x03\x16a\x04~V[a\x04S`\x01`\x01`\xA0\x1B\x03\x8C\x16\x8Ba\x05\xA8V[a\x04]\x91\x90a\t(V[a\x04g\x91\x90a\t(V[\x83\x91\x90a\x06/V[\x9B\x9APPPPPPPPPPPV[_\x80a\x04\x89\x83a\x06\xEEV[\x90P\x82`\x01`\x01`\xA0\x1B\x03\x16\x81`\x01`\x01`\xA0\x1B\x03\x16\x03a\x04\xBDWa\x04\xB6\x83`\x01`\x01`\xA0\x1B\x03\x16a\x07hV[\x93\x92PPPV[_\x81`\x01`\x01`\xA0\x1B\x03\x16c1<\xE5g`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x04\xFAW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x05\x1E\x91\x90a\t?V[\x90P_\x84`\x01`\x01`\xA0\x1B\x03\x16c1<\xE5g`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x05]W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x05\x81\x91\x90a\t?V[\x90Pa\x05\x9Fa\x05\x98\x84`\x01`\x01`\xA0\x1B\x03\x16a\x07hV[\x83\x83a\x08@V[\x95\x94PPPPPV[_`\x01`\x01`\xA0\x1B\x03\x83\x16a\x05\xBFWP`\x01a\x06)V[`@Qc\x03\xD1h\x9D`\xE1\x1B\x81R`\x04\x81\x01\x83\x90R`\x01`\x01`\xA0\x1B\x03\x84\x16\x90c\x07\xA2\xD1:\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x06\x02W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x06&\x91\x90a\x08\xFDV[\x90P[\x92\x91PPV[_\x83\x83\x02\x81_\x19\x85\x87\t\x82\x81\x10\x83\x82\x03\x03\x91PP\x80_\x03a\x06cW\x83\x82\x81a\x06YWa\x06Ya\t_V[\x04\x92PPPa\x04\xB6V[\x80\x84\x11a\x06\x83W`@Qc\"{\xC1S`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[_\x84\x86\x88\t_\x86\x81\x03\x87\x16\x96\x87\x90\x04\x96`\x02`\x03\x89\x02\x81\x18\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x90\x91\x03\x02\x91\x81\x90\x03\x81\x90\x04`\x01\x01\x86\x84\x11\x90\x95\x03\x94\x90\x94\x02\x91\x90\x94\x03\x92\x90\x92\x04\x91\x90\x91\x17\x91\x90\x91\x02\x91PP\x93\x92PPPV[_`\x01`\x01`\xA0\x1B\x03\x82\x16a\x07\x01WP\x90V[\x81`\x01`\x01`\xA0\x1B\x03\x16c.\xF9\xEB\xBA`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x92PPP\x80\x15a\x07[WP`@\x80Q`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01\x90\x92Ra\x07X\x91\x81\x01\x90a\x08\xE2V[`\x01[a\x06)WP\x90V[\x91\x90PV[_`\x01`\x01`\xA0\x1B\x03\x82\x16a\x07\x7FWP`\x01\x91\x90PV[_\x82`\x01`\x01`\xA0\x1B\x03\x16c\xFE\xAF\x96\x8C`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\xA0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x07\xBCW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x07\xE0\x91\x90a\t\x8CV[PPP\x91PP_\x81\x12\x15`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01n72\xB3\xB0\xBA4\xBB2\x900\xB79\xBB\xB2\xB9`\x89\x1B\x81RP\x90a\x089W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x080\x91\x90a\t\xD8V[`@Q\x80\x91\x03\x90\xFD[P\x92\x91PPV[_\x81`\xFF\x16\x83`\xFF\x16\x03a\x08UWP\x82a\x04\xB6V[\x81`\xFF\x16\x83`\xFF\x16\x10\x15a\x08\x89Wa\x08m\x83\x83a\n\rV[a\x08x\x90`\na\x0B\x06V[a\x08\x82\x90\x85a\t(V[\x90Pa\x04\xB6V[a\x08\x93\x82\x84a\n\rV[a\x08\x9E\x90`\na\x0B\x06V[a\x08\xA8\x90\x85a\x0B\x14V[\x94\x93PPPPV[`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x08\xC4W_\x80\xFD[PV[_` \x82\x84\x03\x12\x15a\x08\xD7W_\x80\xFD[\x815a\x04\xB6\x81a\x08\xB0V[_` \x82\x84\x03\x12\x15a\x08\xF2W_\x80\xFD[\x81Qa\x04\xB6\x81a\x08\xB0V[_` \x82\x84\x03\x12\x15a\t\rW_\x80\xFD[PQ\x91\x90PV[cNH{q`\xE0\x1B_R`\x11`\x04R`$_\xFD[\x80\x82\x02\x81\x15\x82\x82\x04\x84\x14\x17a\x06)Wa\x06)a\t\x14V[_` \x82\x84\x03\x12\x15a\tOW_\x80\xFD[\x81Q`\xFF\x81\x16\x81\x14a\x04\xB6W_\x80\xFD[cNH{q`\xE0\x1B_R`\x12`\x04R`$_\xFD[\x80Qi\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x14a\x07cW_\x80\xFD[_\x80_\x80_`\xA0\x86\x88\x03\x12\x15a\t\xA0W_\x80\xFD[a\t\xA9\x86a\tsV[\x94P` \x86\x01Q\x93P`@\x86\x01Q\x92P``\x86\x01Q\x91Pa\t\xCC`\x80\x87\x01a\tsV[\x90P\x92\x95P\x92\x95\x90\x93PV[` \x81R_\x82Q\x80` \x84\x01R\x80` \x85\x01`@\x85\x01^_`@\x82\x85\x01\x01R`@`\x1F\x19`\x1F\x83\x01\x16\x84\x01\x01\x91PP\x92\x91PPV[`\xFF\x82\x81\x16\x82\x82\x16\x03\x90\x81\x11\x15a\x06)Wa\x06)a\t\x14V[`\x01\x81\x81[\x80\x85\x11\x15a\n`W\x81_\x19\x04\x82\x11\x15a\nFWa\nFa\t\x14V[\x80\x85\x16\x15a\nSW\x91\x81\x02\x91[\x93\x84\x1C\x93\x90\x80\x02\x90a\n+V[P\x92P\x92\x90PV[_\x82a\nvWP`\x01a\x06)V[\x81a\n\x82WP_a\x06)V[\x81`\x01\x81\x14a\n\x98W`\x02\x81\x14a\n\xA2Wa\n\xBEV[`\x01\x91PPa\x06)V[`\xFF\x84\x11\x15a\n\xB3Wa\n\xB3a\t\x14V[PP`\x01\x82\x1Ba\x06)V[P` \x83\x10a\x013\x83\x10\x16`N\x84\x10`\x0B\x84\x10\x16\x17\x15a\n\xE1WP\x81\x81\na\x06)V[a\n\xEB\x83\x83a\n&V[\x80_\x19\x04\x82\x11\x15a\n\xFEWa\n\xFEa\t\x14V[\x02\x93\x92PPPV[_a\x06&`\xFF\x84\x16\x83a\nhV[_\x82a\x0B.WcNH{q`\xE0\x1B_R`\x12`\x04R`$_\xFD[P\x04\x90V\xFE\xA2dipfsX\"\x12 B\xD1|\\nUX5\xA9\xA0\x1B\x87\x10\xA3i\x07J\xC5f\xF0XP\xC9\x96\x91:\x0B\xC7\x01G\x05\xDBdsolcC\0\x08\x19\x003";
    /// The bytecode of the contract.
    pub static UNLOCKEDOVALORACLE_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = b"`\x80`@R4\x80\x15a\0\x0FW_\x80\xFD[P`\x046\x10a\0)W_5`\xE0\x1C\x80c\xA4\x1D\xC1\xAC\x14a\0-W[_\x80\xFD[a\0@a\0;6`\x04a\x08\xC7V[a\0RV[`@Q\x90\x81R` \x01`@Q\x80\x91\x03\x90\xF3[_\x80\x82`\x01`\x01`\xA0\x1B\x03\x16c\xEA\xA2\xD7\xB4`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\0\x90W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\0\xB4\x91\x90a\x08\xE2V[\x90P_\x83`\x01`\x01`\xA0\x1B\x03\x16c\x05Oz\xC0`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\0\xF3W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x01\x17\x91\x90a\x08\xFDV[\x90P_\x84`\x01`\x01`\xA0\x1B\x03\x16c.o \xA6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x01VW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x01z\x91\x90a\x08\xE2V[\x90P_\x85`\x01`\x01`\xA0\x1B\x03\x16cF\x179\xD2`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x01\xB9W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x01\xDD\x91\x90a\x08\xFDV[\x90P_\x86`\x01`\x01`\xA0\x1B\x03\x16c\xF5\nG\x18`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x02\x1CW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x02@\x91\x90a\x08\xE2V[\x90P_\x87`\x01`\x01`\xA0\x1B\x03\x16c\xDCS\x85\x8C`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x02\x7FW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x02\xA3\x91\x90a\x08\xE2V[\x90P_\x88`\x01`\x01`\xA0\x1B\x03\x16cV\t^\x11`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x02\xE2W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x03\x06\x91\x90a\x08\xE2V[\x90P_\x89`\x01`\x01`\xA0\x1B\x03\x16c\xAC\xFB\xD3\x9E`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x03EW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x03i\x91\x90a\x08\xE2V[\x90P_\x8A`\x01`\x01`\xA0\x1B\x03\x16c\xCEK[\xBE`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x03\xA8W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x03\xCC\x91\x90a\x08\xFDV[\x90Pa\x04oa\x03\xE3\x85`\x01`\x01`\xA0\x1B\x03\x16a\x04~V[a\x03\xF5\x87`\x01`\x01`\xA0\x1B\x03\x16a\x04~V[a\x04\x08`\x01`\x01`\xA0\x1B\x03\x8D\x16\x8Ca\x05\xA8V[a\x04\x12\x91\x90a\t(V[a\x04\x1C\x91\x90a\t(V[a\x04.\x84`\x01`\x01`\xA0\x1B\x03\x16a\x04~V[a\x04@\x86`\x01`\x01`\xA0\x1B\x03\x16a\x04~V[a\x04S`\x01`\x01`\xA0\x1B\x03\x8C\x16\x8Ba\x05\xA8V[a\x04]\x91\x90a\t(V[a\x04g\x91\x90a\t(V[\x83\x91\x90a\x06/V[\x9B\x9APPPPPPPPPPPV[_\x80a\x04\x89\x83a\x06\xEEV[\x90P\x82`\x01`\x01`\xA0\x1B\x03\x16\x81`\x01`\x01`\xA0\x1B\x03\x16\x03a\x04\xBDWa\x04\xB6\x83`\x01`\x01`\xA0\x1B\x03\x16a\x07hV[\x93\x92PPPV[_\x81`\x01`\x01`\xA0\x1B\x03\x16c1<\xE5g`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x04\xFAW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x05\x1E\x91\x90a\t?V[\x90P_\x84`\x01`\x01`\xA0\x1B\x03\x16c1<\xE5g`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x05]W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x05\x81\x91\x90a\t?V[\x90Pa\x05\x9Fa\x05\x98\x84`\x01`\x01`\xA0\x1B\x03\x16a\x07hV[\x83\x83a\x08@V[\x95\x94PPPPPV[_`\x01`\x01`\xA0\x1B\x03\x83\x16a\x05\xBFWP`\x01a\x06)V[`@Qc\x03\xD1h\x9D`\xE1\x1B\x81R`\x04\x81\x01\x83\x90R`\x01`\x01`\xA0\x1B\x03\x84\x16\x90c\x07\xA2\xD1:\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x06\x02W=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x06&\x91\x90a\x08\xFDV[\x90P[\x92\x91PPV[_\x83\x83\x02\x81_\x19\x85\x87\t\x82\x81\x10\x83\x82\x03\x03\x91PP\x80_\x03a\x06cW\x83\x82\x81a\x06YWa\x06Ya\t_V[\x04\x92PPPa\x04\xB6V[\x80\x84\x11a\x06\x83W`@Qc\"{\xC1S`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[_\x84\x86\x88\t_\x86\x81\x03\x87\x16\x96\x87\x90\x04\x96`\x02`\x03\x89\x02\x81\x18\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x82\x03\x02\x80\x8A\x02\x90\x91\x03\x02\x91\x81\x90\x03\x81\x90\x04`\x01\x01\x86\x84\x11\x90\x95\x03\x94\x90\x94\x02\x91\x90\x94\x03\x92\x90\x92\x04\x91\x90\x91\x17\x91\x90\x91\x02\x91PP\x93\x92PPPV[_`\x01`\x01`\xA0\x1B\x03\x82\x16a\x07\x01WP\x90V[\x81`\x01`\x01`\xA0\x1B\x03\x16c.\xF9\xEB\xBA`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x92PPP\x80\x15a\x07[WP`@\x80Q`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01\x90\x92Ra\x07X\x91\x81\x01\x90a\x08\xE2V[`\x01[a\x06)WP\x90V[\x91\x90PV[_`\x01`\x01`\xA0\x1B\x03\x82\x16a\x07\x7FWP`\x01\x91\x90PV[_\x82`\x01`\x01`\xA0\x1B\x03\x16c\xFE\xAF\x96\x8C`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\xA0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x07\xBCW=_\x80>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x07\xE0\x91\x90a\t\x8CV[PPP\x91PP_\x81\x12\x15`@Q\x80`@\x01`@R\x80`\x0F\x81R` \x01n72\xB3\xB0\xBA4\xBB2\x900\xB79\xBB\xB2\xB9`\x89\x1B\x81RP\x90a\x089W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x080\x91\x90a\t\xD8V[`@Q\x80\x91\x03\x90\xFD[P\x92\x91PPV[_\x81`\xFF\x16\x83`\xFF\x16\x03a\x08UWP\x82a\x04\xB6V[\x81`\xFF\x16\x83`\xFF\x16\x10\x15a\x08\x89Wa\x08m\x83\x83a\n\rV[a\x08x\x90`\na\x0B\x06V[a\x08\x82\x90\x85a\t(V[\x90Pa\x04\xB6V[a\x08\x93\x82\x84a\n\rV[a\x08\x9E\x90`\na\x0B\x06V[a\x08\xA8\x90\x85a\x0B\x14V[\x94\x93PPPPV[`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x08\xC4W_\x80\xFD[PV[_` \x82\x84\x03\x12\x15a\x08\xD7W_\x80\xFD[\x815a\x04\xB6\x81a\x08\xB0V[_` \x82\x84\x03\x12\x15a\x08\xF2W_\x80\xFD[\x81Qa\x04\xB6\x81a\x08\xB0V[_` \x82\x84\x03\x12\x15a\t\rW_\x80\xFD[PQ\x91\x90PV[cNH{q`\xE0\x1B_R`\x11`\x04R`$_\xFD[\x80\x82\x02\x81\x15\x82\x82\x04\x84\x14\x17a\x06)Wa\x06)a\t\x14V[_` \x82\x84\x03\x12\x15a\tOW_\x80\xFD[\x81Q`\xFF\x81\x16\x81\x14a\x04\xB6W_\x80\xFD[cNH{q`\xE0\x1B_R`\x12`\x04R`$_\xFD[\x80Qi\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x14a\x07cW_\x80\xFD[_\x80_\x80_`\xA0\x86\x88\x03\x12\x15a\t\xA0W_\x80\xFD[a\t\xA9\x86a\tsV[\x94P` \x86\x01Q\x93P`@\x86\x01Q\x92P``\x86\x01Q\x91Pa\t\xCC`\x80\x87\x01a\tsV[\x90P\x92\x95P\x92\x95\x90\x93PV[` \x81R_\x82Q\x80` \x84\x01R\x80` \x85\x01`@\x85\x01^_`@\x82\x85\x01\x01R`@`\x1F\x19`\x1F\x83\x01\x16\x84\x01\x01\x91PP\x92\x91PPV[`\xFF\x82\x81\x16\x82\x82\x16\x03\x90\x81\x11\x15a\x06)Wa\x06)a\t\x14V[`\x01\x81\x81[\x80\x85\x11\x15a\n`W\x81_\x19\x04\x82\x11\x15a\nFWa\nFa\t\x14V[\x80\x85\x16\x15a\nSW\x91\x81\x02\x91[\x93\x84\x1C\x93\x90\x80\x02\x90a\n+V[P\x92P\x92\x90PV[_\x82a\nvWP`\x01a\x06)V[\x81a\n\x82WP_a\x06)V[\x81`\x01\x81\x14a\n\x98W`\x02\x81\x14a\n\xA2Wa\n\xBEV[`\x01\x91PPa\x06)V[`\xFF\x84\x11\x15a\n\xB3Wa\n\xB3a\t\x14V[PP`\x01\x82\x1Ba\x06)V[P` \x83\x10a\x013\x83\x10\x16`N\x84\x10`\x0B\x84\x10\x16\x17\x15a\n\xE1WP\x81\x81\na\x06)V[a\n\xEB\x83\x83a\n&V[\x80_\x19\x04\x82\x11\x15a\n\xFEWa\n\xFEa\t\x14V[\x02\x93\x92PPPV[_a\x06&`\xFF\x84\x16\x83a\nhV[_\x82a\x0B.WcNH{q`\xE0\x1B_R`\x12`\x04R`$_\xFD[P\x04\x90V\xFE\xA2dipfsX\"\x12 B\xD1|\\nUX5\xA9\xA0\x1B\x87\x10\xA3i\x07J\xC5f\xF0XP\xC9\x96\x91:\x0B\xC7\x01G\x05\xDBdsolcC\0\x08\x19\x003";
    /// The deployed bytecode of the contract.
    pub static UNLOCKEDOVALORACLE_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct UnlockedOvalOracle<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for UnlockedOvalOracle<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for UnlockedOvalOracle<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for UnlockedOvalOracle<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for UnlockedOvalOracle<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(::core::stringify!(UnlockedOvalOracle))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> UnlockedOvalOracle<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    UNLOCKEDOVALORACLE_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                UNLOCKEDOVALORACLE_ABI.clone(),
                UNLOCKEDOVALORACLE_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `unlockedOraclePrice` (0xa41dc1ac) function
        pub fn unlocked_oracle_price(
            &self,
            oracle: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([164, 29, 193, 172], oracle)
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for UnlockedOvalOracle<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `MathOverflowedMulDiv` with signature `MathOverflowedMulDiv()` and selector `0x227bc153`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "MathOverflowedMulDiv", abi = "MathOverflowedMulDiv()")]
    pub struct MathOverflowedMulDiv;
    ///Container type for all input parameters for the `unlockedOraclePrice` function with signature `unlockedOraclePrice(address)` and selector `0xa41dc1ac`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "unlockedOraclePrice", abi = "unlockedOraclePrice(address)")]
    pub struct UnlockedOraclePriceCall {
        pub oracle: ::ethers::core::types::Address,
    }
    ///Container type for all return fields from the `unlockedOraclePrice` function with signature `unlockedOraclePrice(address)` and selector `0xa41dc1ac`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct UnlockedOraclePriceReturn(pub ::ethers::core::types::U256);
}
